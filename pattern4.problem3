class Solution {
    public int maxOperations(int[] nums, int k) {
        Arrays.sort(nums);
        int count=0;
        int left=0,right=nums.length-1;
        while(left<right){
            int sum=nums[left]+nums[right];
            if(sum==k){
                count++;
                left++;
                right--;
                
                }
                else if(sum<k){
                    left++;
                }
                else{
                    right--;
                }
        }
        return count;
        
    }
}

//solution using hashmap
class Solution {
    public int maxOperations(int[] nums, int k) {
        Map<Integer,Integer> map=new HashMap<>();
        int count=0;
        for(int num : nums){
         int complement=k-num;
         if(map.getOrDefault(complement,0)>0){
            count++;
            map.put(complement,map.getOrDefault(complement,0)-1);
         }
         else{
            map.put(num,map.getOrDefault(num,0)+1);

         }
        }
        return count++;
    }
}
