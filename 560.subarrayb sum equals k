class Solution {
    public int subarraySum(int[] nums, int k) {
        // This will store prefixSum and how many times it appeared
        Map<Integer, Integer> map = new HashMap<>();
        map.put(0, 1); // To handle case when prefixSum == k

        int prefixSum = 0;
        int count = 0;

        for (int num : nums) {
            prefixSum += num; // running total

            // Check if there's a previous prefixSum that when removed gives k
            int remaining = prefixSum - k;

            if (map.containsKey(remaining)) {
                count += map.get(remaining);
            }

            // Add current prefixSum to the map
            map.put(prefixSum, map.getOrDefault(prefixSum, 0) + 1);
        }

        return count;
    }
}
